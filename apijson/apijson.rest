@host=http://localhost:8080
@service={{host}}/service
@apijson={{service}}/apijson

### APIJSONApplication.init初始化时会读取access function request表，并且access表需要有Access Function Reqeust权限配置
POST {{apijson}}/get

{"Access":{"id":"1"}}

### APIAuto会发送以下请求获取文档，access表需要有Table Column权限配置，配合apijson.conf提供服务，接口地址输入https://apijson.xlongwei.com/，右侧设置切换Schema为apijson
### access.name=Table需要debug=0，加载access时调试模式APIJSONVerifier会加上debug:0查询参数
POST {{apijson}}/get

{"format":false,"@database":"MYSQL","sql@":{"from":"Access","Access":{"@column":"name"}},"Access[]":{"count":100,"page":0,"Access":{"@column":"name,alias,get,head,gets,heads,post,put,delete","@order":"date-,name+","name()":"getWithDefault(alias,name)","r0()":"removeKey(alias)","name$":null,"alias$":null,"@combine":null}},"[]":{"count":100,"page":0,"Table":{"table_schema":"sys","table_type":"BASE TABLE","table_name$":null,"table_comment$":null,"@combine":null,"table_name{}@":"sql","@order":"table_name+","@column":"table_name:table_name,table_comment:table_comment"},"PgClass":null,"SysTable":null,"ExtendedProperty":null,"[]":{"count":0,"Column":{"table_schema":"sys","table_name@":"[]/Table/table_name","@order":null,"@column":"column_name:column_name,column_type:column_type,is_nullable:is_nullable,column_comment:column_comment"},"PgAttribute":null,"SysColumn":null,"ExtendedProperty":null}},"Function[]":{"count":100,"page":0,"Function":{"@order":"date-,name+","@column":"name,arguments,demo,detail","demo()":"getFunctionDemo()","detail()":"getFunctionDetail()","r0()":"removeKey(name)","r1()":"removeKey(arguments)","name$":null,"detail$":null,"@combine":null}},"Request[]":{"count":100,"page":0,"Request":{"@order":"version-,method-","@json":"structure","tag$":null}}}

### 查询用户动态和评论：apijson_user、apijson_privacy、moment、comment，access表需要有对应权限配置
POST {{apijson}}/get

{"User":{"id":38710},"[]":{"Comment":{"userId@":"User/id"}}}

### UnitAuto需要登录
POST {{apijson}}/login

{"type":0,"phone":"13000082001","password":"123456","version":1,"remember":true,"format":false}

### UnitAuto登录后会读取Method表，apijson.sql留了两条method数据
POST  {{apijson}}/get

{"format":false,"[]":{"count":50,"page":0,"Method":{"@order":"date-","userId{}":[0,38710],"arguments()":"getMethodArguments(genericMethodArgs)","defination()":"getMethodDefination(method,arguments,type,exceptions,null)","request()":"getMethodRequest()","package$":null,"class$":null,"package*~":null,"class*~":null,"method*~":null,"type*~":null,"detail*~":null,"@combine":null},"TestRecord":{"documentId@":"/Method/id","userId":38710,"testAccountId":null,"randomId":0,"@order":"date-","@column":"id,userId,documentId,duration,minDuration,maxDuration,response","@having":null}},"@role":"LOGIN"}

### 配置apijson.conf时，转发请求/method/list到{{apijson}}/method_list
POST {{apijson}}/method_list

{"package":"com.xlongwei.light4j.util","class":"PinyinUtil"}

### 直接调用静态方法，bean调用比较复杂
POST {{apijson}}/method_invoke

{"package":"com.xlongwei.light4j.util","class":"PinyinUtil","method":"getPinyin","methodArgs":[{"type":"String","value":"拼音"}],"static":true}

#{"package":"com.networknt.registry","class":"URL","method":"getHost"}

